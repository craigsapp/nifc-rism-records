#!/usr/bin/perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Fri Aug 13 13:15:34 CEST 2021
# Last Modified: Sat Aug 14 01:23:13 CEST 2021
# Filename:      nifc-rism/bin/makeRismList
# Syntax:        perl 5
#
# Description:   Collate a list of RISM IDs for Humdrum digital
#                scores (in a different repository).  The list
#                will be stored in list.txt.
#

use strict;
use Getopt::Long;

my $popc2dir;
my $popc1dir;

Getopt::Long::Configure("bundling");
GetOptions (
   'popc1=s' => \$popc1dir,
   'popc2=s' => \$popc2dir
);

$popc2dir = "../production-polish-songs/krn-diplomatic/out" if $popc2dir =~ /^\s*$/;
$popc1dir = "../production-chopin-first-editions/kern"      if $popc2dir =~ /^\s*$/;


my $output;
$output .= getRismIds("POPC1", $popc1dir);
$output .= getRismIds("POPC2", $popc2dir);

print $output;

exit 0;

##########################################################################

##############################
##
## getRismIds --
##

sub getRismIds {
	my ($label, $srcdir) = @_;

	die "Cannot find directory $srcdir" if !-d $srcdir;
	my @files = glob("$srcdir/*.krn");
	die "Problem with files in $srcdir" if @files < 10;

	my %ids;
	foreach my $file (@files) {
		open(FILE, $file) or die "Cannot read $file\n";
		my @contents = <FILE>;
		close FILE;
		chomp @contents;
		foreach my $line (@contents) {
			if ($line =~ /^!!!NIFC-rismID:\s*([^\s]*\d+[^\s]*)\s*$/i) {
				$ids{$1}++;
			}
		}
		
	}

	my $output;
	my @keys = sort keys %ids;
	foreach my $key (@keys) {
		$output .= "$key\t$label\n";
	}

	return $output;
}



